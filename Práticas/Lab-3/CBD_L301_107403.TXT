help

Documented shell commands:
===========================
CAPTURE  CLS          COPY  DESCRIBE  EXPAND  LOGIN   SERIAL  SOURCE   UNICODE
CLEAR    CONSISTENCY  DESC  EXIT      HELP    PAGING  SHOW    TRACING

CQL help topics:
================
AGGREGATES               CREATE_KEYSPACE           DROP_TRIGGER      TEXT     
ALTER_KEYSPACE           CREATE_MATERIALIZED_VIEW  DROP_TYPE         TIME     
ALTER_MATERIALIZED_VIEW  CREATE_ROLE               DROP_USER         TIMESTAMP
ALTER_TABLE              CREATE_TABLE              FUNCTIONS         TRUNCATE 
ALTER_TYPE               CREATE_TRIGGER            GRANT             TYPES    
ALTER_USER               CREATE_TYPE               INSERT            UPDATE   
APPLY                    CREATE_USER               INSERT_JSON       USE      
ASCII                    DATE                      INT               UUID     
BATCH                    DELETE                    JSON            
BEGIN                    DROP_AGGREGATE            KEYWORDS        
BLOB                     DROP_COLUMNFAMILY         LIST_PERMISSIONS
BOOLEAN                  DROP_FUNCTION             LIST_ROLES      
COUNTER                  DROP_INDEX                LIST_USERS      
CREATE_AGGREGATE         DROP_KEYSPACE             PERMISSIONS     
CREATE_COLUMNFAMILY      DROP_MATERIALIZED_VIEW    REVOKE          
CREATE_FUNCTION          DROP_ROLE                 SELECT          
CREATE_INDEX             DROP_TABLE                SELECT_JSON     


CREATE KEYSPACE test
   ... WITH replication = {'class':'SimpleStrategy', 'replication_factor' : 3};

Warnings :
Your replication factor 3 for keyspace test is higher than the number of nodes 1

DESCRIBE test

CREATE KEYSPACE test WITH replication = {'class': 'SimpleStrategy', 'replication_factor': '3'}  AND durable_writes = true;

USE test;

cqlsh:test> CREATE TABLE emp(    emp_id int PRIMARY KEY,    emp_name text,    emp_city text,    emp_sal varint,    emp_phone varint    );
cqlsh:test> SELECT * FROM emp
        ... ;

 emp_id | emp_city | emp_name | emp_phone | emp_sal
--------+----------+----------+-----------+---------

(0 rows)

INSERT INTO emp (emp_id, emp_name, emp_city,
        ...    emp_phone, emp_sal) VALUES(1,'ram', 'Hyderabad', 9848022338, 50000);
test> SELECT * FROM emp ;

 emp_id | emp_city  | emp_name | emp_phone  | emp_sal
--------+-----------+----------+------------+---------
      1 | Hyderabad |      ram | 9848022338 |   50000

(1 rows)

UPDATE emp SET emp_city='Delhi',emp_sal=50000
        ...    WHERE emp_id=2;


SELECT emp_name, emp_sal from emp;

 emp_name  | emp_sal
-----------+---------
       ram |   50000
 Marcolino |   50000
  Josefino |    2000

(3 rows)

# Isto apaga um valor de uma coluna
DELETE emp_sal FROM emp WHERE emp_id=1;

SELECT * FROM emp ;

 emp_id | emp_city  | emp_name  | emp_phone  | emp_sal
--------+-----------+-----------+------------+---------
      1 | Hyderabad |       ram | 9848022338 |    null
      2 |     Delhi | Marcolino | 9848022337 |   50000
      3 | Singapura |  Josefino |  984022937 |    2000

# Isto apagar a row toda
DELETE FROM emp WHERE emp_id=2;
